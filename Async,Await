

const getData = async () =>
{
  try{
    const response = await fetch ('https://api-to-call.com/endpoint'); // sends request
    if(response.ok)
      {
         const jsonResponse = await response.json(); // convert response object to json
         return jsonResponse;
      }
    throw new Error('Request failed!');  //handles errors
  }catch(error)
    {
      console.log(error);   //handles success
    }
};


###########################################################################################################################################


In this exercise, youâ€™re going to build on previously created boilerplate code to get nouns that describe the inputted word from the Datamuse API:


const url = 'https://api.datamuse.com/words?';
const queryParams = 'rel_jja=';

// Selecting page elements
const inputField = document.querySelector('#input');
const submit = document.querySelector('#submit');
const responseField = document.querySelector('#responseField');

// AJAX function
// Code goes here
const getSuggestions = async () => {
  const wordQuery = inputField.value;
  const endpoint = `${url}${queryParams}${wordQuery}`;
  try {
    const response = await fetch(endpoint);
    if(response.ok){
      const jsonResponse = await response.json();
      renderResponse(jsonResponse);
    }
  } catch (error) {
    console.log(error);
  }
}

// Clear previous results and display results to webpage
const displaySuggestions = (event) => {
  event.preventDefault();
  while(responseField.firstChild){
    responseField.removeChild(responseField.firstChild);
  }
  getSuggestions();
}

submit.addEventListener('click', displaySuggestions);



#######################################################################################################################################


//POST REQUEST 
const getData = async () => {
  try {
    const response = await fetch('https://api-to-call.com/endpoint', {
      method: 'POST',
      body: JSON.stringify({id: 200})
    })
    if(response.ok){
      const jsonResponse = await response.json();
      return jsonResponse;
    }
    throw new Error('Request failed!');
  } catch(error) {
    console.log(error);
  }
}
